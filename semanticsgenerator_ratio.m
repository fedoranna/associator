function [P, D] = semanticsgenerator_ratio(P, D)

% Ratio Coding Scheme (after Farah and McClelland, 1991)
% rows = words, columns = features
% 1-59 perceptual features; 60-77 functional features
% 1-22 living, 23-57 non-living

%% Data

words = {
    'L1a';
    'L1b';
    'L1c';
    'L1d';
    'L1e';
    'L1f';
    'L2a';
    'L2b';
    'L2c';
    'L2d';
    'L2e';
    'L2f';
    'L3a';
    'L3b';
    'L3c';
    'L3d';
    'L3e';
    'L3f';
    'L4a';
    'L4b';
    'L4c';
    'L4d';
    'L4e';
    'NL1a';
    'NL1b';
    'NL1c';
    'NL1d';
    'NL1e';
    'NL1f';
    'NL2a';
    'NL2b';
    'NL2c';
    'NL2d';
    'NL2e';
    'NL2f';
    'NL3a';
    'NL3b';
    'NL3c';
    'NL3d';
    'NL3e';
    'NL3f';
    'NL4a';
    'NL4b';
    'NL4c';
    'NL4d';
    'NL4e';
    'NL4f';
    'NL5a';
    'NL5b';
    'NL5c';
    'NL5d';
    'NL5e';
    'NL6a';
    'NL6b';
    'NL6c';
    'NL6d';
    'NL6e';
    };

features = [
    0	1	0	1	1	0	1	0	0	1	1	1	0	0	1	1	1	0	0	1	1	1	1	0	0	1	1	1	1	0	0	1	1	1	0	1	1	1	0	1	1	1	1	0	1	1	0	0	1	1	0	1	0	0	1	1	0	1	0	1	0	1	0	0	0	0	0	1	1	0	0	0	0	0	0	0	0;
    1	1	0	1	0	1	0	1	0	1	1	1	0	1	1	1	1	1	0	1	1	0	1	1	1	0	1	1	0	0	0	0	1	1	0	1	1	0	0	1	0	0	1	0	1	1	0	1	0	1	0	1	0	1	1	1	1	0	1	0	1	1	0	0	0	1	1	0	0	0	0	0	0	0	1	0	0;
    0	0	1	0	0	1	1	1	0	1	1	1	1	1	1	1	1	1	0	1	1	1	1	0	0	0	1	0	1	0	1	1	1	1	0	1	1	0	0	1	1	1	0	0	1	1	0	1	0	1	0	0	1	1	1	0	1	0	1	0	0	0	0	1	0	1	0	0	0	0	0	0	0	0	0	1	1;
    1	1	0	1	0	1	0	1	0	1	1	1	0	1	1	1	0	1	0	1	1	1	0	1	0	0	0	0	1	0	0	1	1	1	1	1	1	0	0	1	1	1	1	1	1	1	0	0	1	1	0	0	1	1	1	1	1	0	0	0	0	1	0	0	0	0	0	1	1	0	0	0	0	0	0	0	0;
    1	1	0	1	0	1	0	0	0	1	0	1	1	1	0	0	1	0	0	1	1	1	1	1	0	0	0	0	1	0	0	1	1	1	0	1	1	1	0	1	1	1	1	1	0	1	0	0	1	0	0	0	0	1	1	1	1	1	1	0	0	1	1	0	1	0	1	0	0	0	0	0	1	1	0	1	0;
    1	1	0	1	0	1	0	1	0	1	0	1	0	1	1	1	1	1	0	1	1	1	1	0	0	0	1	0	0	0	1	1	1	1	0	1	1	0	0	1	1	1	1	1	1	1	0	0	0	1	0	1	0	0	1	1	1	1	1	0	0	1	0	0	0	0	1	0	0	0	0	0	1	0	0	0	0;
    1	1	0	0	0	0	0	1	0	1	0	1	0	0	0	1	1	1	1	1	0	1	1	1	0	0	0	1	0	1	1	0	0	1	0	1	0	0	1	0	1	0	1	1	1	1	0	1	0	1	0	0	1	0	1	0	1	1	1	1	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0	0;
    1	1	0	0	0	0	0	1	1	1	0	0	0	0	0	1	1	1	1	0	0	1	0	0	0	0	1	1	0	1	1	0	0	1	0	1	0	0	1	0	0	0	0	1	0	0	1	1	0	1	0	0	0	0	1	1	1	1	1	1	0	0	0	1	0	1	1	0	0	0	0	0	0	0	1	1	0;
    1	0	0	1	1	0	1	1	0	1	1	1	1	0	0	1	1	1	1	0	0	1	1	0	1	0	0	0	0	0	0	1	0	1	0	1	1	0	1	0	0	0	1	0	0	1	0	1	0	1	0	0	1	0	1	0	1	0	1	0	0	0	1	0	0	1	1	0	0	0	0	1	0	0	0	1	0;
    1	0	0	0	1	1	0	1	0	1	1	1	1	1	0	1	1	1	1	1	1	1	0	1	1	0	0	1	1	1	1	1	0	1	1	1	1	0	1	0	1	0	0	1	0	1	0	1	0	1	0	1	1	0	1	0	0	0	1	0	1	0	0	1	0	0	1	0	0	0	0	1	1	0	0	0	0;
    1	1	0	0	1	0	0	1	0	1	0	1	1	0	0	1	1	1	0	0	1	0	1	0	1	0	0	0	0	1	1	0	0	1	0	1	1	0	1	1	1	0	1	1	0	1	0	1	0	1	0	0	1	1	1	0	1	0	1	0	1	1	0	0	0	0	1	0	0	0	0	0	1	0	0	1	0;
    1	0	0	0	1	1	0	1	0	1	0	1	1	0	0	1	0	0	1	1	0	1	0	0	1	0	0	1	0	1	1	1	0	0	0	1	1	0	1	0	0	0	1	1	1	1	0	1	0	1	0	1	1	0	1	0	1	0	1	0	1	0	1	0	0	0	1	0	0	0	0	0	1	0	0	1	1;
    0	0	0	0	0	0	1	1	0	1	0	0	0	1	1	0	1	0	0	1	1	1	0	0	1	1	0	1	1	0	1	1	0	0	0	0	1	1	1	0	0	0	1	1	0	0	1	0	0	0	0	1	0	1	1	1	1	1	0	1	0	0	0	0	0	1	0	1	0	0	0	0	0	0	0	0	0;
    0	0	0	0	0	1	1	1	0	0	1	0	1	1	1	0	1	1	1	1	1	1	0	1	1	0	1	1	1	0	1	1	1	1	0	1	1	0	1	1	1	0	0	0	0	1	1	0	0	1	1	0	1	1	1	1	1	0	0	0	0	1	0	0	0	0	0	1	0	0	0	0	0	1	0	0	0;
    0	0	0	0	0	0	1	1	0	0	0	0	1	1	1	0	1	0	1	1	1	1	0	0	1	0	1	1	0	0	1	1	1	0	0	0	1	1	1	1	1	0	1	0	0	1	1	0	1	1	0	0	1	1	1	1	1	1	0	1	0	0	1	0	0	0	0	1	0	0	1	0	0	0	0	0	0;
    0	0	0	0	0	1	1	1	1	0	1	0	0	0	1	0	0	0	0	1	1	1	1	0	1	1	1	1	1	1	1	1	0	0	0	1	1	0	1	1	0	0	0	1	0	0	1	0	0	0	0	1	1	1	1	0	1	1	0	0	0	0	0	0	0	1	0	1	0	0	0	1	1	0	0	0	0;
    1	0	0	1	0	1	1	1	0	0	1	1	1	1	1	0	0	0	1	0	1	1	0	0	1	0	1	0	0	0	1	1	1	0	0	0	1	1	1	1	1	0	1	1	0	1	1	0	1	1	0	0	1	1	1	1	1	0	0	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0	0	0;
    0	0	0	1	0	1	1	1	0	0	1	1	0	1	1	1	1	0	1	0	0	1	0	0	0	0	1	1	1	1	1	1	1	0	0	0	1	0	1	0	1	0	1	0	1	1	0	0	1	1	1	0	1	1	0	1	1	1	0	0	1	0	1	0	1	1	0	1	0	0	1	0	0	0	0	0	0;
    0	0	1	0	1	0	1	1	1	1	1	0	1	1	1	1	1	1	1	0	0	1	0	1	1	1	1	1	1	1	1	1	1	0	0	0	1	0	1	0	1	1	1	0	1	1	1	0	1	1	1	0	1	1	1	0	0	0	0	0	0	1	0	0	0	1	0	0	0	0	0	0	1	1	0	0	0;
    1	0	1	1	1	0	0	1	1	1	1	0	0	1	1	0	1	0	1	1	1	1	0	1	1	1	1	1	1	1	0	0	1	0	0	1	1	0	0	0	1	0	1	0	1	1	1	0	1	0	1	1	1	1	1	0	0	1	0	0	0	1	0	0	0	1	0	0	0	0	0	0	1	0	1	0	0;
    1	0	1	1	1	1	0	1	1	1	0	1	1	1	1	1	0	1	1	1	0	1	0	0	1	1	0	1	1	1	0	0	1	1	0	1	1	0	1	0	1	1	0	0	1	0	1	1	1	1	1	1	1	1	1	0	0	0	0	1	0	1	0	0	0	1	0	0	0	0	0	0	1	1	0	0	0;
    1	0	1	1	1	0	0	1	1	1	1	1	1	1	1	1	0	1	1	1	0	1	0	1	0	1	1	0	1	0	0	0	1	0	0	1	1	0	0	0	1	1	0	0	1	1	0	0	1	1	0	1	1	1	1	1	0	0	0	0	0	1	0	0	0	1	0	0	0	0	0	0	0	1	0	0	1;
    1	0	1	1	1	0	0	1	1	1	0	1	1	1	1	1	1	1	0	1	0	1	0	1	1	1	1	1	1	1	0	0	1	0	0	0	1	0	1	0	1	1	0	0	1	1	1	0	1	1	1	0	1	0	1	0	0	0	0	1	0	1	0	0	0	1	0	1	0	1	0	0	1	1	0	0	0;
    0	0	0	0	1	1	0	1	0	0	1	0	0	0	1	0	0	0	0	0	1	0	1	0	1	0	0	0	0	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	0	1	0	1	0	0	1	0	1	0	1	0	0	1	1	0	0	0	1	0	0	1	0	0	1	0;
    1	0	0	1	0	0	0	0	0	0	0	1	0	0	0	0	0	1	0	0	1	0	0	1	1	1	0	0	0	0	1	0	0	0	0	1	0	1	0	0	0	1	0	0	0	0	0	0	0	0	1	0	0	0	0	0	0	1	1	1	0	1	1	1	0	1	0	1	0	0	1	0	0	1	1	1	1;
    1	0	0	0	0	0	0	1	0	1	0	1	1	0	1	0	0	1	0	1	1	0	0	0	1	0	1	0	0	0	1	0	0	0	1	0	0	0	0	1	0	0	1	0	0	1	0	0	1	0	0	0	1	1	0	0	0	0	0	1	0	1	0	0	0	1	1	0	0	1	0	0	1	1	0	0	1;
    0	0	0	0	0	0	0	1	0	0	0	0	0	0	1	0	0	0	0	0	1	0	0	0	0	0	1	1	0	0	0	1	0	0	0	0	0	1	1	0	0	0	0	0	1	1	0	0	1	0	0	0	1	0	0	0	0	1	0	1	0	0	1	1	0	1	1	0	1	1	1	0	0	0	0	1	0;
    0	0	0	0	1	1	0	1	0	0	0	1	1	0	1	0	0	0	0	0	1	1	0	0	1	0	0	0	0	0	0	0	0	0	0	1	0	0	0	1	0	0	0	0	1	0	0	0	0	0	1	0	1	0	0	1	0	0	0	1	0	1	1	0	0	0	1	1	1	1	1	1	1	0	0	0	0;
    1	0	0	0	1	0	1	0	0	1	0	1	1	0	1	0	0	0	1	0	1	1	0	0	0	0	0	0	0	0	1	0	0	0	0	1	1	0	1	0	0	0	0	0	0	0	0	1	1	0	0	0	1	0	0	0	0	1	0	1	0	0	0	0	1	1	1	0	0	0	1	0	1	1	0	0	0;
    0	0	0	0	1	0	0	0	1	0	1	0	0	0	1	0	0	0	1	1	1	1	0	0	1	0	0	0	1	1	0	1	0	0	1	0	0	0	1	0	0	0	1	0	0	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	1	0	0	1	0	1	0	1	0	0	1	1	1	0	0	1	0;
    0	0	0	0	1	1	0	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	0	0	1	0	0	0	0	1	1	1	0	0	0	0	0	0	0	1	0	0	0	0	0	1	0	0	1	0	0	1	0	0	0	0	0	0	0	0	0	0	1	1	1	0	0	1	1	0	0	1	0	0	0	1	0;
    1	0	0	0	1	0	0	0	0	0	1	0	0	0	1	0	1	0	0	0	1	1	0	0	0	0	1	0	0	1	0	1	0	0	0	0	0	0	1	1	1	0	0	1	0	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	1	1	1	1	0	1	0	1	0	0	1	0	0	0	0	1	0;
    0	0	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	1	0	0	0	1	0	1	0	0	0	0	0	0	0	1	1	1	0	1	1	0	0	0	0	0	1	1	0	0	1	1	0	0	0	1	1	0	1	1	0	0	0	1	0	1	1	0	1	0	1	1	0;
    0	0	0	0	1	0	0	0	1	1	1	1	1	0	0	0	1	0	0	1	0	1	0	0	0	1	0	0	0	1	0	1	0	0	0	1	0	1	0	1	0	1	0	0	0	0	0	0	1	0	0	1	0	0	0	1	0	0	0	0	1	0	0	1	1	0	0	1	0	0	1	0	0	0	0	1	0;
    0	0	0	0	1	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0	0	1	0	0	1	1	0	0	0	1	0	1	0	1	0	1	0	0	0	1	0	0	0	0	0	0	0	0	0	0	1	0	0	0	0	1	0	0	0	0	1	1	0	0	0	0	0	1	0	1	1	1	0	0	1	1	1;
    0	0	0	1	0	0	0	0	0	0	0	0	0	0	0	1	0	1	0	0	1	0	0	0	0	0	1	1	1	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	1	0	0	0	1	0	0	0	1	0	1	1	0	0	0	0	0	0	0	1	1	1	1	0	1	0	0	0	0	0	0	0	0;
    0	0	0	1	0	0	0	1	0	1	0	1	0	0	0	0	1	1	0	0	0	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	1	1	0	0	1	0	0	0	1	0	1	0	1	0	1	0	1	0	0	0	1	1	0	1	0	0	1	0	1	1	0	0	0	1	0	1	0;
    1	1	0	1	1	1	0	0	1	0	0	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	1	0	0	1	0	0	0	1	0	0	0	0	0	0	0	0	0	0	0	1	0	0	1	1	1	0	0	0	0	0	0	1	0	1	0	0	0	1	0	0	1	0	0	1	0	0	0	0	1	1	0;
    0	0	0	0	0	0	1	1	0	0	0	1	0	1	0	1	0	1	0	0	0	0	0	0	0	1	0	1	0	0	1	1	0	0	0	0	0	0	0	0	1	1	0	0	1	1	1	0	1	0	0	0	0	0	0	0	0	1	0	0	0	1	0	1	0	1	1	0	1	1	0	1	0	0	0	0	0;
    0	0	1	0	0	0	0	0	0	0	0	1	0	0	0	0	0	1	1	0	0	0	1	0	0	0	0	0	0	0	0	1	0	1	0	0	1	0	0	0	0	0	0	0	1	1	1	0	1	0	1	0	0	0	0	1	0	0	0	0	0	0	0	1	1	0	1	0	1	0	0	0	1	0	0	0	0;
    0	0	0	1	0	0	0	0	0	0	0	1	0	0	1	0	0	1	0	0	0	0	0	0	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	1	0	0	1	0	0	0	0	0	0	0	0	0	0	0	1	1	0	1	1	0	1	0	0	1	0	1	1	0	0	1	0;
    0	0	0	0	1	0	0	1	1	0	0	1	1	0	0	0	0	1	0	1	0	1	0	0	0	1	0	0	0	0	0	0	0	0	0	1	0	0	0	0	1	0	0	0	1	1	0	1	0	0	0	0	1	0	0	0	1	0	0	1	1	1	1	1	0	1	1	1	0	0	1	0	1	1	0	0	0;
    0	0	1	0	1	0	0	0	0	0	0	1	1	0	0	1	1	0	1	0	0	0	0	0	0	0	1	0	0	0	0	0	1	0	1	1	1	0	1	0	0	0	0	0	0	1	0	0	0	0	0	1	0	1	0	0	0	0	1	1	1	1	1	0	0	0	0	1	0	0	1	1	1	1	1	0	1;
    0	0	0	0	0	0	0	0	1	1	0	0	0	0	0	1	0	0	0	0	0	0	0	0	1	0	1	0	0	0	0	0	1	0	0	1	0	0	1	0	0	0	0	0	0	1	0	0	0	0	0	0	1	1	1	0	0	0	0	0	1	1	1	0	0	0	1	1	0	0	1	1	1	1	1	0	1;
    0	1	0	1	0	0	0	0	0	0	0	0	1	0	1	0	1	0	0	0	0	0	0	0	1	0	1	0	1	0	0	1	0	0	0	1	1	0	0	0	1	1	0	0	0	1	1	0	1	0	0	0	0	0	0	0	0	0	0	1	0	0	1	0	1	0	0	1	0	0	0	0	1	0	1	0	0;
    1	0	0	1	1	0	0	0	0	0	0	1	0	0	0	0	1	1	0	0	1	0	0	0	0	0	1	0	0	0	1	0	0	0	0	1	1	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	1	1	1	1	1	0	1	1	0	0	0	0	0	0	0	1	0	1;
    0	0	0	0	1	0	1	0	0	0	0	1	1	1	0	1	1	0	0	1	0	0	0	0	0	0	1	0	0	0	0	0	1	0	0	1	0	0	1	0	0	0	0	0	0	0	1	0	0	0	0	1	1	0	0	0	0	0	0	1	1	1	1	0	0	0	0	1	0	0	1	1	1	1	1	1	0;
    0	1	0	0	0	0	0	0	0	0	1	0	1	0	1	0	0	0	1	1	0	0	0	0	0	0	0	1	0	1	1	0	0	0	0	0	1	1	0	1	0	0	0	1	1	0	1	0	0	1	0	0	0	0	0	1	0	1	0	1	1	1	1	0	0	1	0	0	0	0	0	0	0	1	1	1	0;
    0	0	0	0	1	0	0	1	0	1	1	1	0	0	1	0	0	0	0	0	1	1	1	0	0	0	1	1	0	1	0	0	1	0	0	1	0	0	0	1	0	0	0	0	0	0	1	0	0	0	0	1	0	0	1	0	0	0	0	0	1	0	0	0	1	1	1	0	1	0	0	0	0	0	1	1	1;
    0	0	0	0	1	0	0	0	0	0	1	1	0	0	1	0	0	0	1	1	0	0	0	0	0	0	1	1	0	1	0	0	0	0	0	0	0	0	0	1	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0	1	0	0	0	1	1	0	1	1	1	0	1	0	1	0	0	0	0	1	1	0;
    0	0	1	1	1	0	1	0	0	1	1	1	0	0	0	0	0	0	0	0	0	0	0	1	0	1	1	0	0	1	0	0	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0	0	0	1	0	1	0	1	1	0	0	0	1	1	0	0	1	1	0	0	1	0	0	0	0	0	1	1	0	1;
    0	1	0	1	0	1	1	0	0	1	1	1	1	1	0	0	0	0	0	0	0	0	0	1	0	1	0	0	0	1	1	0	0	1	1	0	1	0	0	0	0	0	1	0	0	0	1	0	0	1	1	1	0	0	1	0	0	0	1	0	1	1	0	1	1	1	0	0	1	0	0	0	0	1	1	1	0;
    0	0	0	1	0	0	0	1	0	1	0	1	1	1	0	1	0	0	0	0	0	0	1	0	0	0	1	0	0	0	0	0	0	0	0	0	0	0	0	1	1	1	0	0	0	0	1	0	0	0	0	0	0	0	0	0	1	0	0	0	0	0	0	0	1	0	1	1	0	0	1	1	0	1	0	0	0;
    0	0	0	1	0	0	1	0	0	0	0	0	0	0	0	0	0	1	0	1	0	0	1	0	0	0	1	0	0	1	1	0	0	0	0	0	0	1	0	0	1	0	0	0	1	1	1	0	0	0	0	0	0	0	0	0	1	0	0	0	0	1	0	0	1	0	1	0	1	0	1	0	1	1	1	1	1;
    0	1	0	1	0	0	0	0	0	0	1	0	0	0	1	1	1	0	0	1	1	0	1	0	0	0	1	0	0	0	0	0	0	0	0	1	0	0	0	0	1	0	0	1	0	0	1	0	0	1	1	1	0	0	0	1	0	0	0	0	0	0	0	0	0	1	1	1	1	0	0	0	0	1	0	0	1;
    1	0	0	1	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	1	0	0	1	0	0	0	1	0	0	1	0	0	0	0	0	1	0	0	0	0	1	0	0	0	0	1	1	0	0	1	1	0	0	0	0	1	1	0	0	0	0	0	0	0	0	1	1	1	1	0	0	0	1	1	0	0	1;
    0	0	0	0	1	0	0	0	1	1	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	0	0	0	0	1	0	0	0	0	0	1	0	0	0	0	0	0	0	1	1	0	0	0	1	0	0	0	0	0	0	0	1	1	0	0	0	0	1	1	0	0	0	1	1	1	1	1;
    ];

semantic_categories = zeros(1, nrows(features));
semantic_categories(1:6 )  = 1; % L1
semantic_categories(7:12)  = 2; % L2 
semantic_categories(13:18) = 3; % L3 
semantic_categories(19:23) = 4; % L4
semantic_categories(24:29) = 5; % NL1
semantic_categories(30:35) = 6; % NL2
semantic_categories(36:41) = 7; % NL3
semantic_categories(42:47) = 8; % NL4
semantic_categories(48:52) = 9; % NL5
semantic_categories(53:67) = 10; % NL6
%% Select

chosen = randchoose(1:nrows(features), P.vocabsize); % choose and randomize order
D.testingsems = features(chosen, :);
P.words = {words{chosen}};
P.protcats = semantic_categories(chosen);

%% Derived parameters

P.nbof_semcats = numel(unique(semantic_categories));

sem_distance = zeros(P.vocabsize, P.vocabsize);
for i = 1:P.vocabsize
    for j = i:P.vocabsize
        sem_distance(i,j) = Eucledian_distance(D.testingsems(i,:), D.testingsems(j,:));
    end
end
semdist_withinclasses = cell(1,P.nbof_semcats);
semdist_bwclasses = cell(P.nbof_semcats,P.nbof_semcats);
for i = 1:P.vocabsize
    for j = i+1 : P.vocabsize
        if P.protcats(i) == P.protcats(j)
            semdist_withinclasses{P.protcats(i)} = [semdist_withinclasses{P.protcats(i)}, sem_distance(i,j)];
        else
            semdist_bwclasses{P.protcats(i), P.protcats(j)} = [semdist_bwclasses{P.protcats(i), P.protcats(j)}, sem_distance(i,j)];
        end
    end
end

all_within = [];
for i = 1: numel(semdist_withinclasses)
    all_within = [all_within, [semdist_withinclasses{i}]];
end
P.semdist_withinclasses = mean(all_within);

all_between = [];
for i = 1: numel(semdist_bwclasses)
    all_between = [all_between, [semdist_bwclasses{i}]];
end
P.semdist_betweenclasses = mean(all_between);

%% Rewriting parameters that were used for prototype based semantics

P.Ssize = ncols(features); % nb of semantic features 120
P.Sact_avg =  sum(sum(features, 2))/nrows(features); % avg nb of active semantic features in each prototype 12
P.nbof_prototypes = 10; % nb of semantic prototypes 5
P.mindistance = []; % the minimum Eucledian distance of semantic prototypes; above 37 it takes very long, no warning when not possible!
P.looseness = []; % the looseness of semantic prototype-categories (the probability that an activation is different from that of the prototype)
P.prototypes = [];
P.Sact = [];

